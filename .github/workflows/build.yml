name: SKIA Builds
on: { push: { tags: ['*'] } }
defaults:
  run:
    shell: bash
  # working-directory: ${{ github.workspace }}
#env:
# version: m106-4100191c58
jobs:
  android:
    if: false # No Android for now
    name: Android
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    strategy:
      matrix:
        machine: [arm, arm64, x64, x86]
    steps:
      - name: Set artifact name
        run: echo "artifact_name=Skia-${{ github.ref_name }}-android-Release-${{ matrix.machine }}" >> "$GITHUB_ENV"

      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Install Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'

      - name: Install
        run: sudo ./script/linux_install.sh

      - name: Check release
        if: false # github.event.inputs.skip_release != 'true'
        run: |
          python3 script/check_release.py \
            --version ${{ github.ref_name }} \
            --system android \
            --machine ${{ matrix.machine }} \
            --repo_slug ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout SKIA
        run: |
          python3 script/checkout.py \
            --version ${{ github.ref_name }} \
            --system android \
            --machine ${{ matrix.machine }}

      - name: Build
        run: |
          python3 script/build.py \
            --build-type ${{ matrix.build_type }} \
            --machine ${{ matrix.machine }} \
            --system android \
            --ndk "/usr/local/lib/android/sdk/ndk-bundle"

      - name: Archive
        run: |
          python3 script/archive.py \
            --system android \
            --machine ${{ matrix.machine }}
          echo "Creating ${{ env.artifact_name }}.md5"
        # TODO: MD5 on Android

      - name: Release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "${{ env.artifact_name }}.zip;${{ env.artifact_name }}.md5"
          update_latest_release: true # needed to add files like the md5
          verbose: false
  linux:
    # if: false # Disable when fixing other jobs
    name: Ubuntu Jammy
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        config:
          - { name: "GCC", cc: gcc, cxx: g++ }
          - { name: "clang", cc: clang, cxx: clang++ }
        machine:    [x64] #, arm64] # FIXME
        build_type: [Release, Debug]
    env:
      cc:  ${{ matrix.config.cc }}
      cxx: ${{ matrix.config.cxx }}
    steps:
      - name: Set artifact name
        run: echo "artifact_name=Skia-${{ github.ref_name }}-linux-${{ matrix.build_type }}-${{ matrix.machine }}-${{ matrix.config.cc }}" >> "$GITHUB_ENV"

      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # ubuntu-20.04 has 3.8, though it worked too

      - name: Install dependencies
        run: sudo ./script/linux_install.sh

      - name: Check release
        if: false # github.event.inputs.skip_release != 'true'
        run: |
          python3 script/check_release.py \
            --version ${{ github.ref_name }} \
            --build-type ${{ matrix.build_type }} \
            --machine ${{ matrix.machine }} \
            --classifier ${{ matrix.config.cc }} \
            --repo_slug ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout SKIA
        run: |
          python3 script/checkout.py \
            --version ${{ github.ref_name }} \
            --machine ${{ matrix.machine }}

      - name: Build
        run: |
          python3 script/build.py \
            --build-type ${{ matrix.build_type }} \
            --machine ${{ matrix.machine }} \
            --classifier ${{ matrix.config.cc }}

      - name: Archive
        run: |
          python3 script/archive.py \
            --version ${{ github.ref_name }} \
            --build-type ${{ matrix.build_type }} \
            --machine ${{ matrix.machine }} \
            --classifier ${{ matrix.config.cc }}
          echo "Creating ${{ env.artifact_name }}.md5"
          echo $(md5sum ${{ env.artifact_name }}.zip | awk '{ print $1 }') \
            > ${{ env.artifact_name }}.md5

      - name: Release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "${{ env.artifact_name }}.zip;${{ env.artifact_name }}.md5"
          update_latest_release: true # needed to add files like the md5
          verbose: false
  macos:
    # if: false # Disable when fixing other jobs
    name: macOS 12
    runs-on: macos-12
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        machine:    [x64, arm64]
        build_type: [Release, Debug]
    steps:
      - name: Set artifact name
        run: echo "artifact_name=Skia-${{ github.ref_name }}-macos-${{ matrix.build_type }}-${{ matrix.machine }}" >> "$GITHUB_ENV"

      - name: Show summary
        run: |
          echo "artifact_name: ${{ env.artifact_name }}"
          echo "BASH_VERSION: $BASH_VERSION"
          system_profiler SPSoftwareDataType
          gcc -v
          xcodebuild -version
          python --version

      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: brew install ninja

      - name: Check release
        if: false # github.event.inputs.skip_release != 'true'
        run: |
          python3 script/check_release.py \
            --version ${{ github.ref_name }} \
            --build-type ${{ matrix.build_type }} \
            --machine ${{ matrix.machine }} \
            --repo_slug ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout SKIA
        run: |
          python3 script/checkout.py \
            --version ${{ github.ref_name }} \
            --machine ${{ matrix.machine }}

      - name: Build
        run: |
          python3 script/build.py \
            --build-type ${{ matrix.build_type }} \
            --machine ${{ matrix.machine }}

      - name: Archive
        run: |
          python3 script/archive.py \
            --version ${{ github.ref_name }} \
            --build-type ${{ matrix.build_type }} \
            --machine ${{ matrix.machine }}
          echo "Creating ${{ env.artifact_name }}.md5"
          md5 ${{ env.artifact_name }}.zip > ${{ env.artifact_name }}.md5

      - name: Release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "${{ env.artifact_name }}.zip;${{ env.artifact_name }}.md5"
          update_latest_release: true # needed to add files like the md5
          verbose: false
  windows:
    # if: false # Disable when fixing other jobs
    name: Windows 2019
    runs-on: windows-2019
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        config:
          - { name: "MSVC", cc: "cl", cxx: "cl" }
        # - { name: "clang", cc: "clang", cxx: "clang++" } FIXME
        build_type: [Release, Debug]
        machine:    [x64, arm64]
    env:
      cc: ${{ matrix.config.cc }}
      cxx: ${{ matrix.config.cxx }}
    steps:
      - name: Set artifact name
        run: echo "artifact_name=Skia-${{ github.ref_name }}-windows-${{ matrix.build_type }}-${{ matrix.machine }}-${{ matrix.config.cc }}" >> "$GITHUB_ENV"

      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # windows-2019 has 3.7.9

      - name: Install dependencies
        run: choco install ninja

      - name: Check release
        if: github.event.inputs.skip_release != 'true'
        run: |
          python3 script/check_release.py \
            --version ${{ github.ref_name }} \
            --build-type ${{ matrix.build_type }} \
            --machine ${{ matrix.machine }} \
            --classifier ${{ matrix.config.cc }} \
            --repo_slug ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout SKIA
        run: |
          python3 script/checkout.py \
            --version ${{ github.ref_name }} \
            --machine ${{ matrix.machine }}

      - name: Build
        run: |
          python3 script/build.py \
            --build-type ${{ matrix.build_type }} \
            --machine ${{ matrix.machine }} \
            --classifier ${{ matrix.config.cc }}

      - name: Archive
        run: |
          python3 script/archive.py \
            --version ${{ github.ref_name }} \
            --build-type ${{ matrix.build_type }} \
            --machine ${{ matrix.machine }} \
            --classifier ${{ matrix.config.cc }}
          echo "Creating ${{ env.artifact_name }}.md5"
          certutil -hashfile ${{ env.artifact_name }}.zip MD5 \
            > ${{ env.artifact_name }}.md5

      - name: Release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "${{ env.artifact_name }}.zip;${{ env.artifact_name }}.md5"
          update_latest_release: true # needed to add files like the md5
          verbose: false
